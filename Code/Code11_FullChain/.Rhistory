data = schools_dat,
seed = 831213,
chains = 4,
cores = 4)
fit
?stan
fit <- stan(file = '~/Desktop/8schools.stan',
data = schools_dat,
seed = 831213,
chains = 4,
cores = 4,
diagnostic_fil = "8schools.txt")
fit <- stan(file = '~/Desktop/8schools.stan',
data = schools_dat,
seed = 831213,
chains = 4,
cores = 4,
diagnostic_fil = "8schools.txt")
debug(stan)
fit <- stan(file = '~/Desktop/8schools.stan',
data = schools_dat,
seed = 831213,
chains = 4,
cores = 4,
diagnostic_fil = "8schools.txt")
stan_model(file, model_name = model_name, model_code = model_code,
stanc_ret = NULL, boost_lib = boost_lib, eigen_lib = eigen_lib,
save_dso = save_dso, verbose = verbose)
debug(stan_model)
stan_model(file, model_name = model_name, model_code = model_code,
stanc_ret = NULL, boost_lib = boost_lib, eigen_lib = eigen_lib,
save_dso = save_dso, verbose = verbose)
stanc(file = file, model_code = model_code,
model_name = model_name, verbose = verbose, obfuscate_model_name = obfuscate_model_name,
allow_undefined = allow_undefined, isystem = isystem)
file
verbose
verbose=TRUE
stanc(file = file, model_code = model_code,
model_name = model_name, verbose = verbose, obfuscate_model_name = obfuscate_model_name,
allow_undefined = allow_undefined, isystem = isystem)
?stanc
stanc_ret <- stanc(file = file, model_code = model_code,
model_name = model_name, verbose = verbose, obfuscate_model_name = obfuscate_model_name,
allow_undefined = allow_undefined, isystem = isystem)
stanc_ret
pkgbuild::has_build_tools(debug = TRUE)
detach("package:rstan", unload=TRUE)
?install.packages
remove.packages("rstan")
if (file.exists(".RData")) file.remove(".RData")
install.packages(c("tidyverse", "Rcpp", "RcppArmadillo",
"StanHeaders",
"rstan", "lme4", "rgl"), type="source", dependencies=TRUE,Ncpus = =12)
install.packages(c("tidyverse", "Rcpp", "RcppArmadillo", "StanHeaders","rstan", "lme4", "rgl"), type="source", dependencies=TRUE,Ncpus =12)
library(tidyverse)
schools_dat <- list(J = 8,
y = c(28,  8, -3,  7, -1,  1, 18, 12),
sigma = c(15, 10, 16, 11,  9, 11, 10, 18))
library(rstan)
options(mc.cores = 4)
rstan_options(auto_write = TRUE)
fit <- stan(file = '~/Desktop/8schools.stan',
data = schools_dat,
seed = 831213,
chains = 4,
cores = 4,
diagnostic_fil = "8schools.txt")
library(lme4)
########################
# Models for Ch 9:
# Policy-makers to
# Policies.
########################
#library(rstanarm)
library(lme4)
library(texreg)
library(doMC)
library(tidyverse)
library(AUC)
registerDoMC(12)
setwd("~/Dropbox/ChainBook/Code/Code9_LinkingStages_PolicyMakers2Policy/")
set.seed(831213)
## Helper functions
bootWrap <- function(.model,.newdata){
pred_fun <- function(.) {
predict(., newdata=.newdata, allow.new.levels=TRUE, type="response")
}
bootpred <- lme4::bootMer(.model, pred_fun, nsim=250, use.u=TRUE, type="parametric",parallel = "multicore",ncpus=12)
data.frame(pred = apply(bootpred$t, 2, function(x) as.numeric(quantile(x, probs=.5, na.rm=TRUE))),
LB = apply(bootpred$t, 2, function(x) as.numeric(quantile(x, probs=.1, na.rm=TRUE))),
UB = apply(bootpred$t, 2, function(x) as.numeric(quantile(x, probs=.9, na.rm=TRUE)))
)
}
## Import data
pow_pref_pol <- read.csv("../../Datasets/FinishedOutput/PowersPrefPolicies.csv")
pow_pref_pol$LaggedWinCongConst <- with(pow_pref_pol, ave(winset_cong_c_B, country, type, FUN=function(x)c(NA, x[-length(x)])))
pow_pref_pol$LaggedWinCongSpline <- with(pow_pref_pol, ave(winset_cong_s_B, country, type, FUN=function(x)c(NA, x[-length(x)])))
pow_pref_pol$ImprovedWinCongConst <- with(pow_pref_pol, (LaggedWinCongConst < winset_cong_c_B) | ((LaggedWinCongConst==1) & (winset_cong_c_B==1)))
pow_pref_pol$ImprovedWinCongSpline <- with(pow_pref_pol, (LaggedWinCongSpline < winset_cong_s_B) | ((LaggedWinCongSpline==1) & (winset_cong_s_B==1)))
pow_pref_pol$LaggedMOCongConst <- with(pow_pref_pol, ave(mo_cong_c_L, country, type, FUN=function(x)c(NA, x[-length(x)])))
pow_pref_pol$LaggedMOCongSpline <- with(pow_pref_pol, ave(mo_cong_s_L, country, type, FUN=function(x)c(NA, x[-length(x)])))
pow_pref_pol$ImprovedMOCongConst <- with(pow_pref_pol, LaggedMOCongConst < mo_cong_c_L)
pow_pref_pol$ImprovedMOCongSpline <- with(pow_pref_pol, LaggedMOCongSpline < mo_cong_s_L)
## Winset one-to-one
##Evolving
winset_model_s <- glmer(winset_cong_s_B ~
+ gdp2y
+ infl2y
+ unemp2y
+ ExecParty_pref_spline
+ MedianParty_pref_spline
+ dist_spline
#+ ProcessCollapsed
#+ I(ProcessCollapsed^2)
#+ (1 |ProcessCollapsed)
+ ProcessNumberAll
+ I(ProcessNumberAll^2)
+ (1 |ProcessNumberAll)
, family=binomial()
,data = pow_pref_pol)
summary(winset_model_s)
?isSingular
auc(roc(predict(winset_model_s, type="response"), as.factor(model.frame(winset_model_s)[,1])))
##Constant
winset_model_c <- glmer(winset_cong_c_B ~
+ infl2y
+ unemp2y
+ gdp2y
+ ExecParty_pref_const
+ MedianParty_pref_const
+ dist_const
# + ProcessCollapsed
# + I(ProcessCollapsed^2)
# + (1 |ProcessCollapsed)
+ ProcessNumberAll
+ I(ProcessNumberAll^2)
+ (1 |ProcessNumberAll)
, family=binomial()
,data = pow_pref_pol)
auc(roc(predict(winset_model_c, type="response"), as.factor(model.frame(winset_model_c)[,1])))
## MANY TO ONE
## Evolving
cong_model_s_mo <- lmer(mo_cong_s_L ~
+ infl2y
+ unemp2y
+ gdp2y
+ ExecParty_pref_spline
+ MedianParty_pref_spline
+ dist_spline
# + ProcessCollapsed
# + I(ProcessCollapsed^2)
# + (1 |ProcessCollapsed)
+ ProcessNumberAll
+ I(ProcessNumberAll^2)
+ (1 |ProcessNumberAll)
,data = pow_pref_pol)
cor(model.frame(cong_model_s_mo)[,1], predict(cong_model_s_mo))^2
cong_model_c_mo <- lmer(mo_cong_c_L ~
+ infl2y
+ unemp2y
+ gdp2y
+ ExecParty_pref_const
+ MedianParty_pref_const
+ dist_const
# + ProcessCollapsed
# + I(ProcessCollapsed^2)
# + (1 |ProcessCollapsed)
+ ProcessNumberAll
+ I(ProcessNumberAll^2)
+ (1 |ProcessNumberAll)
,data = pow_pref_pol)
cor(model.frame(cong_model_c_mo)[,1], predict(cong_model_c_mo))^2
texreg(list(winset_model_s,
winset_model_c,
cong_model_s_mo,
cong_model_c_mo),
custom.coef.names = c("(Intercept)",
"Inflation",
"Unemployment",
"GDP growth",
"Executive Party",
"Median Legislative Party",
"Distance: Exec. to Median Leg.",
"PMP",
"PMP$^2$",
"Executive Party",
"Median Legislative Party",
"Distance: Exec. to Median Leg."
),
booktabs = TRUE,
dcolumn = TRUE,
stars = .1)
pow_pref_pol$SameDirChangeLeg_s <- with(pow_pref_pol, sign(ChangePolicy*ChangeLPrefSpline)>0)
pow_pref_pol$SameDirChangeExec_s <- with(pow_pref_pol, sign(ChangePolicy*ChangeEPrefSpline)>0)
pow_pref_long <- pow_pref_pol %>%
dplyr::select(country,
year,
Resp_Legislature = SameDirChangeLeg_s,
Resp_Executive = SameDirChangeExec_s,
gdp2y,
infl2y,
unemp2y,
ExecParty_pref_const,
MedianParty_pref_const,
ExecParty_pref_spline,
MedianParty_pref_spline,
ImprovedWinCongConst,
ImprovedWinCongSpline,
ImprovedMOCongConst,
ImprovedMOCongSpline,
#ProcessCollapsed,
ProcessNumberAll,
dist_const,
dist_spline) %>%
gather(Variable, SameDir, c("Resp_Legislature", "Resp_Executive")) %>%
separate(Variable, into = c("Variable","Branch"))
pow_pref_long_1st <- subset(pow_pref_long, !duplicated(pow_pref_long[,c("country", "dist_const","Branch")]))
resp_pp_s <- glmer(SameDir ~  ExecParty_pref_spline
+MedianParty_pref_spline
+ infl2y
+ unemp2y
+gdp2y
#+ ProcessCollapsed
#+ I(ProcessCollapsed^2)
+ ProcessNumberAll
+ I(ProcessNumberAll^2)
+ Branch
#+ (1 |ProcessCollapsed),
+(1|ProcessNumberAll),
family = binomial,
data = pow_pref_long)
auc(roc(predict(resp_pp_s, type="response"), as.factor(model.frame(resp_pp_s)[,1])))
resp_pp_c <- glmer(SameDir ~ ExecParty_pref_const
+ MedianParty_pref_const
+ infl2y
+ unemp2y
+ gdp2y
# + ProcessCollapsed
# + I(ProcessCollapsed^2)
+ ProcessNumberAll
+ I(ProcessNumberAll^2)
+ Branch
#+ (1 |ProcessCollapsed),
+(1|ProcessNumberAll),
family = binomial,
data = pow_pref_long_1st)
auc(roc(predict(resp_pp_c, type="response"), as.factor(model.frame(resp_pp_c)[,1])))
texreg(list(resp_pp_s,
resp_pp_c),
custom.coef.names = c("(Intercept)",
"Inflation",
"Unemployment",
"GDP growth",
"Executive Party",
"Median Legislative Party",
"PMP",
"PMP$^2$",
"Legislature?",
"Executive Party",
"Median Legislative Party"
),
booktabs = TRUE,
dcolumn = TRUE,
stars = .1)
texreg(list(resp_pp_s,
resp_pp_c),
# custom.coef.names = c("(Intercept)",
#                       "Inflation",
#                       "Unemployment",
#                       "GDP growth",
#                       "Executive Party",
#                       "Median Legislative Party",
#                       "PMP",
#                       "PMP$^2$",
#                       "Legislature?",
#                       "Executive Party",
#                       "Median Legislative Party"
# ),
booktabs = TRUE,
dcolumn = TRUE,
stars = .1)
texreg(list(resp_pp_s,
resp_pp_c),
custom.coef.names = c("(Intercept)",
"Executive Party",
"Median Legislative Party",
"Inflation",
"Unemployment",
"GDP growth",
"PMP",
"PMP$^2$",
"Legislature?",
"Executive Party",
"Median Legislative Party"
),
booktabs = TRUE,
dcolumn = TRUE,
stars = .1)
#############################
# Models for Ch. 10:  Citizens
# to Policy
#############################
library(lme4)
library(ggplot2)
library(texreg)
library(AUC)
library(dplyr)
library(tidyverse)
library(doMC)
registerDoMC(4)
## Helper functions
bootWrap <- function(.model,.newdata){
pred_fun <- function(.) {
predict(., newdata=.newdata, allow.new.levels=TRUE, type="response")
}
bootpred <- lme4::bootMer(.model, pred_fun, nsim=250, use.u=TRUE, type="parametric", parallel = "multicore",ncpus=12)
data.frame(pred = apply(bootpred$t, 2, function(x) as.numeric(quantile(x, probs=.5, na.rm=TRUE))),
LB = apply(bootpred$t, 2, function(x) as.numeric(quantile(x, probs=.1, na.rm=TRUE))),
UB = apply(bootpred$t, 2, function(x) as.numeric(quantile(x, probs=.9, na.rm=TRUE)))
)
}
setwd("~/Dropbox/ChainBook/Code/Code10_Conclusion/")
cit_data <- read.csv("../../Datasets/FinishedOutput/CitPrefESPow.csv")
#cit_data$PMP <- cit_data$ProcessCollapsed
cit_data$PMP <- cit_data$ProcessNumberAll
cit_data$SenGroup <- replace_na(cit_data$SenGroup,"X")
cit_data$SenGroupNum <- as.numeric(replace(cit_data$SenGroup, cit_data$SenGroup=="X", "0"))
cit_data$InstExec <- as.factor(with(cit_data, paste(PMP,ExecGroup,sep="_")))
cit_data$InstLow <- as.factor(with(cit_data,  paste(PMP,LegGroup,sep="_")))
cit_data$InstUp <- as.factor(with(cit_data,  paste(PMP,SenGroup,sep="_")))
cit_data$Institutions <- as.factor(with(cit_data,  paste(PMP,ExecGroup,LegGroup,replace_na(SenGroup,"X"),sep="_")))
cit_data$sameDirChange <- with(cit_data,sign(ChangePolicy*lag_ChangeCitPref)>0)
cit_data$LaggedOOCong <- with(cit_data, ave(oo_cong, country, type, FUN=function(x)c(NA, x[-length(x)])))
cit_data$LaggedMOCong <- with(cit_data, ave(mo_cong, country, type, FUN=function(x)c(NA, x[-length(x)])))
cit_data$ImprovedOOCong <- with(cit_data, LaggedOOCong < oo_cong)
cit_data$ImprovedMOCong <- with(cit_data, LaggedMOCong < mo_cong)
cit_data_sim <- read.csv("CitizenToPolicySim.csv")
cit_data_sim <- filter(cit_data_sim, Variable != "Simulated Responsiveness")
cit_data_sim$Source <- "Simulated"
#one to one
oo_cong_model <- lmer(oo_cong ~
+ExecParty_pref
+ MedianParty_pref
+ infl2y
+ unemp2y
+ gdp2y
+ I(PMP^2)
+ I(LegGroup^2)
+ I(ExecGroup^2)
+ I(SenGroupNum^2)
+ PMP * LegGroup
+ PMP * ExecGroup
+ PMP * SenGroupNum
+(1|PMP)
+ (1|ExecGroup)
+(1|LegGroup)
+(1|SenGroup)
,data = cit_data
, REML = TRUE
, control=lmerControl(optimizer = "Nelder_Mead"))
summary(oo_cong_model)
cor(model.frame(oo_cong_model)[,1], predict(oo_cong_model))^2
#many to one m
mo_cong_model <- lmer(mo_cong ~
+ ExecParty_pref
+ MedianParty_pref
+ infl2y
+ unemp2y
+ gdp2y
+ I(PMP^2)
+ I(LegGroup^2)
+ I(ExecGroup^2)
+ I(SenGroupNum^2)
+ PMP
* LegGroup
+ PMP*ExecGroup
+ PMP*SenGroupNum
#+(1|ExecGroup:LegGroup:SenGroup:PMP)
+(1|PMP)
+ (1|ExecGroup)
+(1|LegGroup)
+(1|SenGroup)
,data = cit_data
, REML = TRUE
, control=lmerControl(optimizer = "bobyqa"))
summary(mo_cong_model)
cor(model.frame(mo_cong_model)[,1], predict(mo_cong_model))^2
texreg(list(oo_cong_model,mo_cong_model),
custom.model.names = c("Median-to-Policy","Distribution-to-Policy"),
# custom.coef.names = c("Intercept",
#                       "Executive Party",
#                       "Median Legislative Party",
#                       "PMP$^2$",
#                       "Elec. Group of Lower$^2$",
#                       "Elec. Group of President$^2$",
#                       "Elec. Group of Upper$^2$",
#                       "PMP",
#                       "Elec. Group of Lower",
#                       "Elec. Group of President",
#                       "Elec. Group of Upper",
#                       "PMP x Elec. Group of Lower",
#                       "PMP x Elec. Group of President",
#                       "PMP x Elec. Group of Upper"),
booktabs = TRUE,
dcolumn = TRUE,
stars = .1,
include.aic = FALSE,
digits = 2)
texreg(list(oo_cong_model,mo_cong_model),
custom.model.names = c("Median-to-Policy","Distribution-to-Policy"),
custom.coef.names = c("Intercept",
"Executive Party",
"Median Legislative Party",
"Inflation",
"Unemployment",
"GDP growth",
"PMP$^2$",
"Elec. Group of Lower$^2$",
"Elec. Group of President$^2$",
"Elec. Group of Upper$^2$",
"PMP",
"Elec. Group of Lower",
"Elec. Group of President",
"Elec. Group of Upper",
"PMP x Elec. Group of Lower",
"PMP x Elec. Group of President",
"PMP x Elec. Group of Upper"),
booktabs = TRUE,
dcolumn = TRUE,
stars = .1,
include.aic = FALSE,
digits = 2)
texreg(list(oo_cong_model,mo_cong_model),
custom.model.names = c("Median-to-Policy","Distribution-to-Policy"),
custom.coef.names = c("Intercept",
"Executive Party",
"Median Legislative Party",
"Inflation",
"Unemployment",
"GDP growth",
"PMP$^2$",
"Elec. Group of Lower$^2$",
"Elec. Group of President$^2$",
"Elec. Group of Upper$^2$",
"PMP",
"Elec. Group of Lower",
"Elec. Group of President",
"Elec. Group of Upper",
"PMP x Elec. Group of Lower",
"PMP x Elec. Group of President",
"PMP x Elec. Group of Upper"),
booktabs = TRUE,
dcolumn = TRUE,
stars = .1,
include.aic = TRUE,
digits = 2)
##Responsiveness
resp_model <- glmer(sameDirChange~
ExecParty_pref
+ MedianParty_pref
+ infl2y
+ unemp2y
+ gdp2y
+ PMP * LegGroup
+ PMP*SenGroupNum
+ PMP*ExecGroup
+(1|PMP)
+ (1|ExecGroup)
+(1|LegGroup)
+(1|SenGroup)
, glmerControl(optimizer = "Nelder_Mead")
,data=cit_data
,family=binomial)
texreg(list(resp_model),
custom.coef.names = c("Intercept",
"Executive Party",
"Median Legislative Party",
"Inflation",
"Unemployment",
"GDP growth",
"PMP",
"Elec. Group of Lower",
"Elec. Group of President",
"Elec. Group of Upper",
"PMP x Elec. Group of Lower",
"PMP x Elec. Group of President",
"PMP x Elec. Group of Upper"),
booktabs = TRUE,
dcolumn = TRUE,
stars = .1,
include.aic = FALSE,
digits = 2)
texreg(list(resp_model),
custom.coef.names = c("Intercept",
"Executive Party",
"Median Legislative Party",
"Inflation",
"Unemployment",
"GDP growth",
"PMP",
"Elec. Group of Lower",
"Elec. Group of President",
"Elec. Group of Upper",
"PMP x Elec. Group of Lower",
"PMP x Elec. Group of President",
"PMP x Elec. Group of Upper"),
booktabs = TRUE,
dcolumn = TRUE,
stars = .1,
include.aic = TRUE,
digits = 2)
