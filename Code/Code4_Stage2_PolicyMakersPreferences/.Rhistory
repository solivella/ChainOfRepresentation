return (data.frame(median.party, median.party.mood, prez.party, prez.party.mood))
}
####################################################################
#### Use which.party.median to collect all relevant information ####
####################################################################
AllMedians <- c()
for (i in 1:length(unique(res.by.party$pais))) {
which.country <- unique(res.by.party$pais)[i]
tempData <- res.by.party[res.by.party$pais==which.country,]
countryData <- res.by.country.year[res.by.country.year$pais==which.country,]
for (j in 1:length(unique(tempData$year))) {
which.year <- unique(tempData$year)[j]
miniTempData <- tempData[tempData$year==which.year,]
miniCountryData <- countryData[countryData$year==which.year,]
miniPrezData <- prezParties[prezParties$pais==which.country & prezParties$year==which.year,]
dat <- which.party.median (temp=miniTempData, temp2=miniPrezData)
dat$legislative.median <- countryData$mood[countryData$pais==which.country & countryData$year==which.year]
dat$country <- which.country
dat$year <- which.year
AllMedians <- rbind (AllMedians, dat)
}
graphicsPath <- "~/Dropbox/ChainBook/BookManuscript/Graphs/"
prettyCountryNames <- c("Argentina","Mexico","Chile","El Salvador"
,"Bolivia","Honduras","Colombia","Costa Rica"
,"Nicaragua","Guatemala","Paraguay","Ecuador"
,"Dominican Republic","Peru","Uruguay"
,"Venezuela","Panama","Brazil")
res.by.country.year$pais <- dplyr::recode(res.by.country.year$pais,
"RepublicaDominicana" = "Dominican Republic",
"ElSalvador" = "El Salvador",
"CostaRica" = "Costa Rica")
res.by.party %>%
dplyr::select(PartyAcronym, mood, pais, year) %>%
dplyr::mutate(Actor="Within-party median") %>%
dplyr::left_join(dplyr::mutate(dplyr::select(prezParties, presidentialParties, pais, year), year=as.numeric(year))) %>%
dplyr::mutate(presidentialParties = as.character(PartyAcronym)==as.character(presidentialParties)) %>%
dplyr::mutate(Actor = ifelse(presidentialParties, "President", Actor)) %>%
mutate(pais = dplyr::recode(.$pais,
"DominicanRep" = "Dominican Republic",
"RepublicaDominicana" = "Dominican Republic",
"ElSalvador" = "El Salvador",
"CostaRica" = "Costa Rica")) %>%
ggplot(aes(x=mood, y=as.factor(year), color=Actor, shape=Actor)) +
facet_wrap(~pais, nrow=3, scales="free") +
scale_color_manual(values=c("black", "black", "gray")) +
scale_shape_manual(values=c(0, 19, 19)) +
geom_text_repel(aes(label=PartyAcronym), direction="x", angle=45, force=0.1,show.legend = FALSE, size=3)+
geom_point(data=mutate(res.by.country.year, Actor="Overall median"))+
theme_bw() +
theme(panel.grid.major.x = element_blank()
,panel.grid.minor.x = element_blank())+
xlab("Pro State <--- Mood ---> Pro Market") +
ylab("Year")
library (ggplot2)
res.by.party %>%
dplyr::select(PartyAcronym, mood, pais, year) %>%
dplyr::mutate(Actor="Within-party median") %>%
dplyr::left_join(dplyr::mutate(dplyr::select(prezParties, presidentialParties, pais, year), year=as.numeric(year))) %>%
dplyr::mutate(presidentialParties = as.character(PartyAcronym)==as.character(presidentialParties)) %>%
dplyr::mutate(Actor = ifelse(presidentialParties, "President", Actor)) %>%
mutate(pais = dplyr::recode(.$pais,
"DominicanRep" = "Dominican Republic",
"RepublicaDominicana" = "Dominican Republic",
"ElSalvador" = "El Salvador",
"CostaRica" = "Costa Rica")) %>%
ggplot(aes(x=mood, y=as.factor(year), color=Actor, shape=Actor)) +
facet_wrap(~pais, nrow=3, scales="free") +
scale_color_manual(values=c("black", "black", "gray")) +
scale_shape_manual(values=c(0, 19, 19)) +
geom_text_repel(aes(label=PartyAcronym), direction="x", angle=45, force=0.1,show.legend = FALSE, size=3)+
geom_point(data=mutate(res.by.country.year, Actor="Overall median"))+
theme_bw() +
theme(panel.grid.major.x = element_blank()
,panel.grid.minor.x = element_blank())+
xlab("Pro State <--- Mood ---> Pro Market") +
ylab("Year")
res.by.party %>%
dplyr::select(PartyAcronym, mood, pais, year) %>%
dplyr::mutate(Actor="Within-party median") %>%
dplyr::left_join(dplyr::mutate(dplyr::select(prezParties, presidentialParties, pais, year), year=as.numeric(year))) %>%
dplyr::mutate(presidentialParties = as.character(PartyAcronym)==as.character(presidentialParties)) %>%
dplyr::mutate(Actor = ifelse(presidentialParties, "President", Actor)) %>%
mutate(pais = dplyr::recode(.$pais,
"DominicanRep" = "Dominican Republic",
"RepublicaDominicana" = "Dominican Republic",
"ElSalvador" = "El Salvador",
"CostaRica" = "Costa Rica")) %>%
ggplot(aes(x=mood, y=as.factor(year), color=Actor, shape=Actor)) +
facet_wrap(~pais, nrow=3, scales="free") +
scale_color_manual(values=c("black", "black", "gray")) +
scale_shape_manual(values=c(0, 19, 19)) +
geom_text_repel(aes(label=PartyAcronym), direction="x", angle=45, force=0.1,show.legend = FALSE, size=3)+
geom_point(data=mutate(res.by.country.year, Actor="Overall median"))+
theme_bw() +
theme(panel.grid.major.x = element_blank()
,panel.grid.minor.x = element_blank())+
xlab("Pro State <--- Mood ---> Pro Market") +
ylab("Year")
library (ggrepel)
res.by.party %>%
dplyr::select(PartyAcronym, mood, pais, year) %>%
dplyr::mutate(Actor="Within-party median") %>%
dplyr::left_join(dplyr::mutate(dplyr::select(prezParties, presidentialParties, pais, year), year=as.numeric(year))) %>%
dplyr::mutate(presidentialParties = as.character(PartyAcronym)==as.character(presidentialParties)) %>%
dplyr::mutate(Actor = ifelse(presidentialParties, "President", Actor)) %>%
mutate(pais = dplyr::recode(.$pais,
"DominicanRep" = "Dominican Republic",
"RepublicaDominicana" = "Dominican Republic",
"ElSalvador" = "El Salvador",
"CostaRica" = "Costa Rica")) %>%
ggplot(aes(x=mood, y=as.factor(year), color=Actor, shape=Actor)) +
facet_wrap(~pais, nrow=3, scales="free") +
scale_color_manual(values=c("black", "black", "gray")) +
scale_shape_manual(values=c(0, 19, 19)) +
geom_text_repel(aes(label=PartyAcronym), direction="x", angle=45, force=0.1,show.legend = FALSE, size=3)+
geom_point(data=mutate(res.by.country.year, Actor="Overall median"))+
theme_bw() +
theme(panel.grid.major.x = element_blank()
,panel.grid.minor.x = element_blank())+
xlab("Pro State <--- Mood ---> Pro Market") +
ylab("Year")
i=1
which.country <- unique(res.by.party$pais)[i]
tempData <- res.by.party[res.by.party$pais==which.country,]
countryData <- res.by.country.year[res.by.country.year$pais==which.country,]
range <- (max (tempData$mood[tempData$PartyAcronym!="Other"], na.rm=T)-min (tempData$mood[tempData$PartyAcronym!="Other"], na.rm=T))
min.range <- min (tempData$mood[tempData$PartyAcronym!="Other"], na.rm=T)
max.range <- max (tempData$mood[tempData$PartyAcronym!="Other"], na.rm=T)
minimum <- min.range - 0.05*range
maximum <- max.range + 0.05*range
no.years <- length(unique(tempData$year))
plot (c(minimum,maximum), c(1,no.years+2), type="n"
, xlab="Policy mood"
, ylab=""
, main=prettyCountryNames[i]
, axes=F, cex=1.2)
axis (1)
axis (2, at=c(2:(length(unique(tempData$year))+1)), labels=unique(tempData$year), las=1)
# legend ("topright"
#         , legend=c("Median legislator","President's party","Within-party median")
#         , col=c("black","black","gray")
#         , pch=c(1,19,19), bty="n")
for (j in 1:length(unique(tempData$year))) {
which.year <- unique(tempData$year)[j]
miniTempData <- tempData[tempData$year==which.year & tempData$PartyAcronym!="Other",]
miniCountryData <- countryData[countryData$year==which.year,]
miniPrezData <- prezParties[prezParties$pais==which.country & prezParties$year==which.year,]
prezParty <- which (as.character (miniTempData$PartyAcronym)==as.character (miniPrezData$presidentialParties))
if (even(length(miniTempData$mood))) {
min.mood <- min (miniTempData$mood, na.rm=T)
max.mood <- max (miniTempData$mood, na.rm=T)
y.coord <- jitter(rep(c(j+1.25, j+0.75), nrow(miniTempData)/2), amount=0.15)
if (length(miniTempData$mood) > 3) {
x.coord <- min.range + ((miniTempData$mood-min.mood)/(max.mood-min.mood))*range
} else {
x.coord <- miniTempData$mood
}
segments (x0=x.coord, y0=y.coord
, x1=miniTempData$mood, y1=rep((j+1), nrow(miniTempData))
, lwd=1, col="grey")
text (xy.coords(x.coord, y.coord)
, labels=miniTempData$PartyAcronym, cex=0.9)
} else {
min.mood <- min (miniTempData$mood, na.rm=T)
max.mood <- max (miniTempData$mood, na.rm=T)
y.coord <- jitter(c(rep(c(j+1.25, j+0.75), floor(nrow(miniTempData)/2)), j+1.2), amount=0.15)
if (length(miniTempData$mood) > 3) {
x.coord <- min.range + ((miniTempData$mood-min.mood)/(max.mood-min.mood))*range
} else {
x.coord <- miniTempData$mood
}
segments (x0=x.coord, y0=y.coord
, x1=miniTempData$mood, y1=rep((j+1), nrow(miniTempData))
, lwd=1, col="grey")
text (xy.coords(x.coord, y.coord)
, labels=miniTempData$PartyAcronym, cex=0.7)
}
points (xy.coords(miniTempData$mood, rep((j+1), nrow(miniTempData))), pch=19, col="gray")
points (xy.coords(miniCountryData$mood, (j+1)), pch=0, col="black", cex=1.3)
points (xy.coords(miniTempData$mood[prezParty], (j+1)), pch=19, col="black")
}
library (tidyverse)
library (gtools)
library (reshape2)
library (plyr)
library (runjags)
library (MCMCpack)
library (mcmcplots)
library (car)
library (parallel)
library (data.table)
library (lme4)
library (zoo)
library (xtable)
library (rstan)
library (rminer)
library (ggrepel)
library (ggalt)
graphPath <- "~/Dropbox/ChainBook/BookManuscript/GraphsSept2019/"
dataPath  <- "~/Dropbox/ChainBook/Datasets/OriginalDataFiles/"
# Correlation function to be used below
cor.test.plus <- function(x) {
list(x,
Standard.Error = unname(sqrt((1 - x$estimate^2)/x$parameter)))
}
####################
# Load legislators #
####################
# These data include the individual level responses, not the percentages that we eventually use
load (file=paste0 (dataPath, "PELAIndividualResponsesMI.RData"))
colnames (LegMI)
LegMI$id <- paste (LegMI$pais, LegMI$year, LegMI$Term, sep="/")
aggdata <- as.character (aggregate(LegMI$id, by=list(LegMI$id),
FUN=unique, na.rm=FALSE)[,2])
countryCol <- unlist (strsplit (aggdata, split="/", fixed=TRUE ))[seq(1,length(aggdata)*3,by=3)]
yearCol <- unlist (strsplit (aggdata, split="/", fixed=TRUE ))[seq(2,length(aggdata)*3,by=3)]
termCol <- unlist (strsplit (aggdata, split="/", fixed=TRUE ))[seq(3,length(aggdata)*3,by=3)]
# Introduce corrections to termCol, so that all legislative terms
# coincide with what we see in NewPartyWeights.csv.
# Recall that the terms were not always well put together
yearCol[countryCol=="Argentina" & yearCol=="2005"] <- "2007"
termCol[countryCol=="Argentina" & termCol=="2007-2011"] <- "2007-2009"
termCol[countryCol=="Bolivia" & termCol=="2002-2007"] <- "2002-2005"
termCol[countryCol=="Mexico" & termCol=="2009-2011"] <- "2009-2012"
termCol[countryCol=="Uruguay" & termCol=="2009-2014"] <- "2010-2015"
# Introduce term columns for Senate and for Presidents
party.weights <- read.csv(paste0 (dataPath, "NewPartyWeightsOld.csv"), na.strings="NA")
termUpper <- termPres <- c()
for (i in 1:length (termCol)) {
termUpper[i] <- as.character (unique (party.weights$TermUpper[party.weights$Country==countryCol[i] & party.weights$CorrectTerm==termCol[i]]))
termPres[i]  <- as.character (unique (party.weights$TermPres[party.weights$Country==countryCol[i] & party.weights$CorrectTerm==termCol[i]]))
}
##################################################################################
##################################################################################
## These lines produce an object that we later use for plotting
##################################################################################
##################################################################################
largestLHparty <- largestLHshare <- c()
largestUHparty <- largestUHshare <- c()
termLH <- termUH <- termPrez <- land <- match.year <- c()
for (i in 1:length (termCol)) {
tmp <- party.weights[party.weights$Country==countryCol[i] & party.weights$CorrectTerm==termCol[i],]
yr <- yearCol[i]
ld <- as.character (unique (tmp$Country))
LH <- termCol[i]
UH <- termUpper[i]
Prez <- termPres[i]
largeLHp <- paste ( as.character (tmp$PartyAcronym[which (tmp$Seat.ShareLH==max(tmp$Seat.ShareLH))]), collapse="/")
largeLHs <- unique (tmp$Seat.ShareLH[which (tmp$Seat.ShareLH==max(tmp$Seat.ShareLH))])
# largeLHs <- tmp$Seat.ShareLH[which (tmp$Seat.ShareLH==max(tmp$Seat.ShareLH))]
if ( invalid (tmp$Seat.ShareUH)) {
largeUHp <- NA
largeUHs <- NA
} else {
largeUHp <- paste ( as.character (tmp$PartyAcronym[which (tmp$Seat.ShareUH==max(tmp$Seat.ShareUH))]), collapse="/")
largeUHs <- unique (tmp$Seat.ShareUH[which (tmp$Seat.ShareUH==max(tmp$Seat.ShareUH))])
}
land <- c(land, ld)
termLH <- c(termLH, LH)
termUH <- c(termUH, UH)
termPrez <- c(termPrez, Prez)
match.year <- c(match.year, yr)
largestLHparty <- c(largestLHparty, largeLHp)
largestLHshare <- c(largestLHshare, largeLHs)
largestUHparty <- c(largestUHparty, largeUHp)
largestUHshare <- c(largestUHshare, largeUHs)
}
PartyLabelsData <- data.frame (pais=land, termLH=termLH, termUH=termUH
, termPrez=termPrez, matchYear=match.year
, largestLHparty=largestLHparty
, largestUHparty=largestUHparty
, largestLHshare=largestLHshare
, largestUHshare=largestUHshare)
PartyLabelsData
cor (cbind (party.weights$Seat.ShareLH, party.weights$Seat.ShareUH), use="p")
correctLabels4Book <- party.weights$Country
levels (correctLabels4Book) <- ifelse (levels(correctLabels4Book)=="Republica Dominicana"
, "Dominican Republic", levels(correctLabels4Book))
par (mar=c(4,4,1,1))
plot (party.weights$Seat.ShareLH, party.weights$Seat.ShareUH, pch=19, col="grey"
, ylab="Party seat shares, upper houses", xlab="Party seat shares, lower houses")
discrepant.UH <- which (party.weights$Seat.ShareUH[party.weights$Seat.ShareLH<0.1]>0.5)
discrepant.LH <- which (party.weights$Seat.ShareLH[party.weights$Seat.ShareUH<0.2]>0.4)
discrepant.UH.hi <- which (party.weights$Seat.ShareLH[party.weights$Seat.ShareUH>0.76]>0.4)
text (xy.coords (party.weights$Seat.ShareLH[party.weights$Seat.ShareLH<0.1][discrepant.UH]
,party.weights$Seat.ShareUH[party.weights$Seat.ShareLH<0.1][discrepant.UH])
, labels=paste(correctLabels4Book[party.weights$Seat.ShareLH<0.1][discrepant.UH]
, party.weights$CorrectTerm[party.weights$Seat.ShareLH<0.1][discrepant.UH]
, party.weights$PartyAcronym[party.weights$Seat.ShareLH<0.1][discrepant.UH], sep=", ")
, cex=0.8, pos=4)
text (xy.coords (party.weights$Seat.ShareLH[party.weights$Seat.ShareUH>0.76][discrepant.UH.hi]
,party.weights$Seat.ShareUH[party.weights$Seat.ShareUH>0.76][discrepant.UH.hi])
, labels=paste(correctLabels4Book[party.weights$Seat.ShareUH>0.76][discrepant.UH.hi]
, party.weights$CorrectTerm[party.weights$Seat.ShareUH>0.76][discrepant.UH.hi]
, party.weights$PartyAcronym[party.weights$Seat.ShareUH>0.76][discrepant.UH.hi], sep=", ")
, cex=0.8, pos=2)
text (xy.coords (party.weights$Seat.ShareLH[party.weights$Seat.ShareUH<0.2][discrepant.LH]
,party.weights$Seat.ShareUH[party.weights$Seat.ShareUH<0.2][discrepant.LH])
, labels=paste(correctLabels4Book[party.weights$Seat.ShareUH<0.2][discrepant.LH]
, party.weights$CorrectTerm[party.weights$Seat.ShareUH<0.2][discrepant.LH]
, party.weights$PartyAcronym[party.weights$Seat.ShareUH<0.2][discrepant.LH], sep=", ")
, cex=0.8, pos=3)
abline (a=0, b=1, lty=2)
availCountries <- read.table (file=paste0 (dataPath, "PELAavailableDataSurveyOnRows.txt")
, sep="\t", header=T)
# Function to change levels of a factor
changeLevels <- function (var) {
if (is.factor(var)==FALSE) {
print ("Not a factor")
} else {
temp <- delevels (var, levels=levels(var), label=1)
temp <- delevels (temp, levels="", label=NA)
temp <- as.numeric (temp)
return (temp)
}
}
vars2recode <- colnames (availCountries)[!is.element(colnames(availCountries), c("id","Year","Country"))]
for (i in 1:ncol(availCountries)) {
if (!is.element (colnames(availCountries)[i], vars2recode)) { next }
else {
availCountries[,i] <- changeLevels (availCountries[,i])
}
}
################################################
# Plot country-years for which we have surveys #
################################################
countryLabels <- as.character (sort (unique (availCountries$Country)))
countryLabels[grep("Brasil", countryLabels)] <- "Brazil"
countryLabels[grep("Republica Dominicana", countryLabels)] <- "Dominican Rep."
yearLabels <- 1993:2013
par (mar=c(4,8,1,1), las=2, mfrow=c(1,1))
plot (c(1, length(yearLabels)), c(1, length(countryLabels))
, type="n", axes=F, ylab="", xlab="")
axis (1, at=c(1:length(yearLabels)), labels=yearLabels)
axis (2, at=c(1:length(countryLabels)), labels=countryLabels)
abline (h=1:length(countryLabels), lty=3)
no.surveys <- c()
for (i in 1:length(countryLabels)) {
cntr <- levels (availCountries$Country)[i]
surv <- sort (unique (availCountries$Year[availCountries$Country==cntr]))
no.surveys <- c(no.surveys, length (surv))
points (xy.coords (c(1:length(yearLabels))[is.element (yearLabels, as.numeric(surv))], rep (i, length(surv)))
, pch=19, cex=1, col="black")
}
fivenum (no.surveys)
graphicsPath <- "~/Dropbox/ChainBook/BookManuscript/GraphsSept2019/"  # Save copies here as well
# load (file="~/Dropbox/ChainBook/Code/Code5_Blender/McGannIRT.RData")
load (file="~/Dropbox/ChainBook/Code/Code6_TheModel/JointIRT_Flexible_1990.RData")
# load (file="~/Dropbox/ChainBook/Code/Code6_TheModel/JointIRT_Flexible.RData") # Chains
load("~/Dropbox/ChainBook/Code/Code6_TheModel/sharedItemParameterData.RData")  # Input for chains
# load (file="~/Dropbox/ChainBook/Datasets/OriginalDataFiles/itemsPerYear.RData")
## Prepare data
finalData$ActorCtyYr <- as.integer(as.factor(with(finalData,
paste(type, country, year))))
finalData <- finalData[order(finalData$ActorCtyYr),]
finalData <- filter(finalData, year >= 1990)
finalData$QuestionID <- as.integer(as.factor(with(finalData,
paste(country, QuestionName))))
##pm-country-years
pmct <- finalData %>% filter(type!="Government")
##p-country-years
pct1 <- finalData %>%
filter(type=="Government" &
QuestionName %in% c("privatization.beneficial",
"capital.mobility.good")) %>%
mutate_at("value", function(x)case_when(x < 3 ~ 0, TRUE ~ 1))
pct2 <- finalData %>%
filter(type=="Government" &
!(QuestionName %in% c("privatization.beneficial",
"capital.mobility.good")))
# Get type, country, year
actor <- with (finalData, tapply (type, ActorCtyYr, unique))
country <- with (finalData, tapply (country, ActorCtyYr, unique))
year <- with (finalData, tapply (year, ActorCtyYr, unique))
actor.type <- actor[actor != "Government"]
country <- country[actor != "Government"]
year    <- year[actor != "Government"]
########################
# Graph available data #
########################
vars2recode <- vars2recode[!is.element(vars2recode, c("LR.ideology.prez1","LR.ideology.self","PartyCode"))]
jagsDataLeg <- finalData %>% filter(type=="Legislator")
data.frame (whichCountry, whichYear, countItems) # print all information
min (countItems) # minimum number of items (6)
whichCountry[which (countItems<6)] # No legislature now with anything less than 6 items
whichCountry[which (countItems==max(countItems))] # Legislatures with 14 items
round (mean (countItems), 2) # average number of items per legislature
presidentialParties <- c("PJ","PJ","PJ","PJ","PJ"  # Argentina
,"MNR","ADN","MNR","MAS"  # Bolivia
,"PT","PT","PT"           # Brazil
,"DC","DC","PS","PS","RN" # Chile
,"PC","PL-U","U","U"      # Colombia
,"PLN","PUSC","PUSC","PLN","PLN" # Costa Rica
,"PRD","PLD","PRD","PLD","PLD" # DomRep
,"PRE","DP","PRIAN","PRIAN","MPAIS" # Ecuador
,"ARENA","ARENA","ARENA","ARENA","FMLN" # El Salvador
,"PAN","FRG","Patriota","UNE","Patriota" # Guatemala
,"PL","PL","PN","PL","PN"  # Honduras
,"PRI","PRI","PAN","PAN","PAN","PAN" # Mexico
,"AL","PLC","FSLN"  # Nicaragua
,"PA","PRD","CD"   # Panama
,"ANR","ANR","ANR","Other"  # Paraguay
,"Cambio90","PP","PAP"  # Peru
,"PC","PC","FA","FA" # Uruguay
,"AD","MVR")   # Venezuela
prezParties <- data.frame (presidentialParties=presidentialParties
, paisYear=id)
# The next lines read auxiliary information to plot presidential paths
Pela <- LegMI    #; rm (LegMI)
Pela$pais <- car::recode (Pela$pais, "'Costa Rica'='CostaRica'; 'Brasil'='Brazil';
'El Salvador'='ElSalvador'; 'Republica Dominicana'='DominicanRep'")
Pela$pais <- as.factor (Pela$pais)
Pela$paisYear <- as.factor (paste (Pela$pais, Pela$year, sep="-"))
colnames (Pela)[grep("LR.ideology.self", colnames(Pela))] <- "left.right"
id <- names (by (Pela$PartyAcronym, Pela$paisYear, unique))
presidentialParties <- c("PJ","PJ","PJ","PJ","PJ"  # Argentina
,"MNR","ADN","MNR","MAS"  # Bolivia
,"PT","PT","PT"           # Brazil
,"DC","DC","PS","PS","RN" # Chile
,"PC","PL-U","U","U"      # Colombia
,"PLN","PUSC","PUSC","PLN","PLN" # Costa Rica
,"PRD","PLD","PRD","PLD","PLD" # DomRep
,"PRE","DP","PRIAN","PRIAN","MPAIS" # Ecuador
,"ARENA","ARENA","ARENA","ARENA","FMLN" # El Salvador
,"PAN","FRG","Patriota","UNE","Patriota" # Guatemala
,"PL","PL","PN","PL","PN"  # Honduras
,"PRI","PRI","PAN","PAN","PAN","PAN" # Mexico
,"AL","PLC","FSLN"  # Nicaragua
,"PA","PRD","CD"   # Panama
,"ANR","ANR","ANR","Other"  # Paraguay
,"Cambio90","PP","PAP"  # Peru
,"PC","PC","FA","FA" # Uruguay
,"AD","MVR")   # Venezuela
prezParties <- data.frame (presidentialParties=presidentialParties
, paisYear=id)
samePres <- c("Argentina-1997","Argentina-2005","ElSalvador-1997","ElSalvador-2003","Mexico-1997","Mexico-2003","Mexico-2009")
prezPartiesBis <- prezParties[!is.element(prezParties$paisYear, samePres),]
prezPartiesBis
# Read information about presidents
prezPartiesBis$pais <- unlist (strsplit (as.character(prezPartiesBis$paisYear), split="-"))[odd(1:(nrow(prezPartiesBis)*2))]
prezPartiesBis$year <- unlist (strsplit (as.character(prezPartiesBis$paisYear), split="-"))[even(1:(nrow(prezPartiesBis)*2))]
countryNames <- c("Argentina","Bolivia","Brazil","Chile"
,"Colombia","CostaRica","Ecuador","ElSalvador"
,"Guatemala","Honduras","Mexico","Nicaragua"
,"Panama","Paraguay","Peru","DominicanRep"
,"Uruguay","Venezuela")
i=1
which.country <- c(1:18)[i]
which.country.name <- countryNames[i]
which.country.label <- countryLabels[i]
tmpPrez <- prezPartiesBis[prezPartiesBis$pais==which.country.name,]
tmp <- PartyLabelsData[PartyLabelsData$pais==which.country.name,]
tmpPrez
tmp
colnames (tmpPrex)
colnames (tmpPrez)
tmpPrez
tmp
Temp <- merge (tmpPrez, tmp, by.x="year"
, by.y="matchYear", all.x=T)
Temp
large.party.in.exec <- ifelse (Temp$presidentialParties==Temp$largestLHparty, 1, 0)
party.share <- ifelse (Temp$presidentialParties==Temp$largestLHparty, Temp$largestLHshare, 0)
Temp <- merge (tmpPrez, tmp, by.x="year"
, by.y="matchYear", all.x=T)
large.party.in.exec <- ifelse (Temp$presidentialParties==Temp$largestLHparty, 1, 0)
large.party.in.exec <- ifelse (as.character(Temp$presidentialParties)==as.character(Temp$largestLHparty), 1, 0)
large.party.in.exec
party.share <- ifelse (as.character(Temp$presidentialParties)==as.character(Temp$largestLHparty), Temp$largestLHshare, 0)
party.share
Temp$year
which.country
which.country.name
x <- y <- z <- c()
for (i in 1:length(countryLabels)){
which.country <- c(1:18)[i]
which.country.name <- countryNames[i]
which.country.label <- countryLabels[i]
tmpPrez <- prezPartiesBis[prezPartiesBis$pais==which.country.name,]
tmp <- PartyLabelsData[PartyLabelsData$pais==which.country.name,]
Temp <- merge (tmpPrez, tmp, by.x="year"
, by.y="matchYear", all.x=T)
large.party.in.exec <- ifelse (as.character(Temp$presidentialParties)==as.character(Temp$largestLHparty), 1, 0)
party.share <- ifelse (as.character(Temp$presidentialParties)==as.character(Temp$largestLHparty), Temp$largestLHshare, 0)
country <- rep (which.country.name, length (party.share))
x <- c(x, large.party.in.exec)
y <- c(y, party.share)
z <- c(z, country)
}
cbind (x, y, z)
data.frame (cbind (x,y,z))
x <- y <- z <- w <- c()
for (i in 1:length(countryLabels)){
which.country <- c(1:18)[i]
which.country.name <- countryNames[i]
which.country.label <- countryLabels[i]
tmpPrez <- prezPartiesBis[prezPartiesBis$pais==which.country.name,]
tmp <- PartyLabelsData[PartyLabelsData$pais==which.country.name,]
Temp <- merge (tmpPrez, tmp, by.x="year"
, by.y="matchYear", all.x=T)
large.party.in.exec <- ifelse (as.character(Temp$presidentialParties)==as.character(Temp$largestLHparty), 1, 0)
party.share <- ifelse (as.character(Temp$presidentialParties)==as.character(Temp$largestLHparty), Temp$largestLHshare, 0)
country <- rep (which.country.name, length (party.share))
x <- c(x, large.party.in.exec)
y <- c(y, party.share)
z <- c(z, country)
w <- c(w, Temp$year)
}
data.frame (cbind (x,y,z,w))
write.table (exportFile, file="~/Dropbox/2019latamPolitics/week12_PresidentsLegislatures/seatshareupdate.txt", sep="\t")
exportFile <- data.frame (cbind (x,y,z,w))
write.table (exportFile, file="~/Dropbox/2019latamPolitics/week12_PresidentsLegislatures/seatshareupdate.txt", sep="\t")
