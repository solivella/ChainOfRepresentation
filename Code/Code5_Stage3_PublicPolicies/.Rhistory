axis (1, at=sort (unique (AllData$year)))
axis (2)
for (i in 1:length (unique(AllData$country))) {
pais <- unique(AllData$country)[i]
points (xy.coords(AllData$year[AllData$country==pais], Labor[AllData$country==pais]+small.jitter[i]), col=rainbow(n)[i], type="l")
}
points (sort (unique (AllData$year)), LaborQuants, type="l", lwd=3)
par (las=2, mar=c(4,3,1,1))
plot (c(1985, 2014), c(min(IntlFin, na.rm=T)-0.12, max(IntlFin, na.rm=T)+0.12), type="n", axes=F, xlab="", ylab="")
axis (1, at=sort (unique (AllData$year)))
axis (2)
for (i in 1:length (unique(AllData$country))) {
pais <- unique(AllData$country)[i]
points (xy.coords(AllData$year[AllData$country==pais], IntlFin[AllData$country==pais]+small.jitter[i]), col=rainbow(n)[i], type="l")
}
points (sort (unique (AllData$year)), IntlFinQuants, type="l", lwd=3)
#legend ("topleft", bty="n", legend=c.labs, lwd=1, col=rainbow(n), cex=0.8)
setwd (workingPath)
tempData <- data.frame (country=AllData$country, year=AllData$year, trade=Trade
, finance=Finance, privatize=Privat, fiscal=Fiscal, labor=Labor, intlfinance=IntlFin)
fit1 <- lm (trade ~ as.factor(year), data=tempData)
fit2 <- lm (finance ~ as.factor(year), data=tempData)
fit3 <- lm (privatize ~ as.factor(year), data=tempData)
fit4 <- lm (fiscal ~ as.factor(year), data=tempData)
fit5 <- lm (labor ~ as.factor(year), data=tempData)
fit6 <- lm (intlfinance ~ as.factor(year), data=tempData)
# Print, for each area, within-year variance first, then between-year variance
round (anova(fit1)["Residuals", "Mean Sq"], 2); round (anova(fit1)["as.factor(year)", "Mean Sq"], 2)
round (anova(fit2)["Residuals", "Mean Sq"], 2); round (anova(fit2)["as.factor(year)", "Mean Sq"], 2)
round (anova(fit3)["Residuals", "Mean Sq"], 2); round (anova(fit3)["as.factor(year)", "Mean Sq"], 2)
round (anova(fit4)["Residuals", "Mean Sq"], 2); round (anova(fit4)["as.factor(year)", "Mean Sq"], 2)
round (anova(fit5)["Residuals", "Mean Sq"], 2); round (anova(fit5)["as.factor(year)", "Mean Sq"], 2)
round (anova(fit6)["Residuals", "Mean Sq"], 2); round (anova(fit6)["as.factor(year)", "Mean Sq"], 2)
#######################
#### Try Bayes GRM ####
#######################
setwd ("~/Dropbox/ChainBook/Code/Code4_Stage3_PublicPolicies/")
Y <- as.matrix (OrderData) # Matrix with ordered responses to policy items
N <- nrow(OrderData)   # Number of country-year observations
J <- ncol(OrderData)   # Number of items
K <- as.numeric (apply (Y, 2, max, na.rm=T)) # Number of categories in each item j
# Build Kappa matrix to hold values
# Items may have different number of categories, so we need to fix at 0 all cutpoints that won't be needed
# For example, if the maximum number of categories is 5 (needing 4 cutpoints), but an item only has 3 categories
# (needing 2 cutpoints), the row for the 3-category item should be NA, NA, 0, 0 (the NAs will store the MCMC
# iterations)
kappa.matrix <- matrix (NA, nrow=J, ncol=(max(K)-1))
for (i in 1:length(K)){
if (K[i] > ncol(kappa.matrix)) { next } else {
kappa.matrix[i,K[i]:ncol(kappa.matrix)] <- 0
}
# Priors
s.alpha <- 4
s.kappa <- 4
m.alpha <- 0
m.kappa <- 0
# Set parameter monitors
jags.parameters <- c("theta","deviance","alpha","kappa")
# Dump data into correct format
Data=list(Y=Y, J=J, N=N, K=K
, s.alpha=s.alpha, s.kappa=s.kappa
, m.alpha=m.alpha, m.kappa=m.kappa
, kappa=kappa.matrix)
jags.data <- dump.format(Data) #
# Function to build appropriate number of priors for varying cutpoints
build.kappa.inits <- function (input.mat=kappa.matrix, n.cat=K) {
# input.mat contains the matrix that we will pass as data, following advice in Curtis 2010, p.9
# n.cat is a vector with the number of categories for each item
mat.inits <- matrix (NA, ncol=ncol(input.mat), nrow=nrow(input.mat))
for (i in 1:nrow(mat.inits)) {
mat.inits[i,1:(K[i]-1)] <- rnorm (K[i]-1,0,1)
}
return (mat.inits)
}
# Function to generate initial values
jags.inits <- function()
{
dump.format(
list(
theta=rnorm(N,0,2)
, alpha=runif(J,0,2)  # To coincide with positive priors
, kappa.star=build.kappa.inits ()
#, beta=rnorm(1,0,2)
) )
}
#####################################################################################
#### We will run the model twice, once with constrained, once with unconstrained ####
#####################################################################################
etiquetas2 <- c("Reserve Requirement", "Job Termination", "Minimum Wage", "Work Hours Flexibility"
, "Hiring Flexibility", "Social Security" , "Corporate Tax", "Personal Tax", "VAT rate"
, "Average Tariff", "Tariff Dispersion", "Interest Rate Lib.", "Financial Transaction Tax"
, "Privatization 1", "Privatization 2", "Capital Openness")
rm (PoolChains)
load (file="~/Dropbox/ChainBook/Datasets/OriginalDataFiles/BayesGRMPublicPolicyChains.RData")
Theta <- rbind (PoolChains[[1]][,grep("theta",  colnames (PoolChains[[1]]))],
PoolChains[[2]][,grep("theta",  colnames (PoolChains[[2]]))])
Alpha <- rbind (PoolChains[[1]][,grep("alpha",  colnames (PoolChains[[1]]))],
PoolChains[[2]][,grep("alpha",  colnames (PoolChains[[2]]))])
# Plot discrimination coefficients
Alpha.Quants <- matrix (NA, nrow=5, ncol=ncol (Alpha))
for (r in 1:ncol(Alpha)){
Alpha.Quants[,r] <- quantile (Alpha[,r], prob=c(0.025,0.1,0.5,0.9,0.975))
}
colnames (Alpha.Quants) <- colnames (Alpha)
par (las=1, mar=c(3.5,9,2,1), mfrow=c(1,1), cex.main=1)
lo.x <- min (Alpha.Quants) - 0.05
hi.x <- max (Alpha.Quants) + 0.05 # hi.x <- 0
plot (c(lo.x, hi.x)
, c(1, ncol(Alpha.Quants))
, type="n", xlab=""
, ylab="", axes=F)
axis(1, cex=0.9)
mtext (1, line=2, text="Coefficient (80% and 95% HPDs)")
# mtext (3, line=0, text="Fixed coefficients")
mtext (text=etiquetas2, side=2, at=c(1:ncol(Alpha.Quants)), cex=0.9)
points (xy.coords(Alpha.Quants[3,], 1:ncol(Alpha.Quants)), pch=19)
segments (x0=Alpha.Quants[2,]
, x1=Alpha.Quants[4,]
, y0=seq(1, ncol(Alpha.Quants), by=1)
, y1=seq(1, ncol(Alpha.Quants), by=1), lwd=6)
segments (x0=Alpha.Quants[1,]
, x1=Alpha.Quants[5,]
, y0=seq(1, ncol(Alpha.Quants), by=1)
, y1=seq(1, ncol(Alpha.Quants), by=1), lwd=2)
abline (h=1:ncol(Alpha.Quants), lty=3)
abline (v=0, lty=3)
# Also obtain point estimates of reform scores, to compare against plain-vanilla graded response model
Theta.Quants <- matrix (NA, nrow=5, ncol=ncol (Theta))
for (r in 1:ncol(Theta)){
Theta.Quants[,r] <- quantile (Theta[,r], prob=c(0.025,0.1,0.5,0.9,0.975))
}
colnames (Theta.Quants) <- paste (AllData$country, AllData$year, sep="_")
Bayes.policy.scores <- Theta.Quants[3,]
Bayes.policy.lo <- Theta.Quants[2,]
Bayes.policy.hi <- Theta.Quants[4,]
# Rebuild policy index, from unconstrained data
Policy.Index <- data.frame (country=AllData$country, year=AllData$year, policy.index=apply (Theta, 2, quantile, prob=0.5))
labelPais <- c("Argentina","Bolivia","Brazil","Chile"
,"Colombia","Costa Rica","Dominican Republic","Ecuador"
,"El Salvador","Guatemala","Honduras","Mexico"
,"Nicaragua","Paraguay","Panama","Peru","Uruguay","Venezuela")
yearLabels <- c(1985:2014)
par (mar=c(4,3,1,1), las=3, mfrow=c(2,3))
for (i in 1:length (labelPais)) {
pais <- unique (AllData$country)[i]
par (mar=c(4,3,1,1), las=3, mfrow=c(1,1))
plot (c(1, length(yearLabels)), c(-3.5, 3.5)
, type="n", axes=F, ylab="", xlab="", main=labelPais[i])
axis (1, at=c(1:length(yearLabels)), labels=yearLabels)
axis (2)
#mtext (side=2, line=2, text="Pro Market <--- Mood ---> Pro State")
points (xy.coords (yearLabels-1984, Bayes.policy.scores[AllData$country==pais]), pch=19)
segments (y0=Bayes.policy.lo[AllData$country==pais]
, y1=Bayes.policy.hi[AllData$country==pais]
, x0=yearLabels-1984
, x1=yearLabels-1984
, lwd=3)
# legend ("bottomleft", legend=c("Bayes GRM","ML GRM", "Lora", "FA")
#         , pch=c(19, 19, 19, 4), col=c("black","blue","red","black")
#         , bty="n")
}
par (mar=c(4,3,1,1), las=3, mfrow=c(3,3))
for (i in 1:length (labelPais)) {
pais <- unique (Policy.Index$country)[i]
plot (c(1, length(yearLabels)), c(-3.5, 3.5)
, type="n", axes=F, ylab="", xlab="", main=labelPais[i])
axis (1, at=seq(1,length(yearLabels),by=2), labels=yearLabels[seq(1,length(yearLabels),by=2)], cex=0.7)
axis (2)
points (xy.coords (yearLabels-1984, Policy.Index$policy.index[Policy.Index$country==pais])
, type="l", col="black")
points (xy.coords (yearLabels-1984, Policy.Index$policy.index.unconstrained.no.vat[Policy.Index$country==pais])
, type="l", col="blue")
points (xy.coords (yearLabels-1984, Policy.Index$policy.index.unconstrained[Policy.Index$country==pais])
, type="l", col="red")
if (i==1 | i==10) {
legend ("topleft", legend=c("GRM constrained","GRM unconstrained","GRM unconstrained no VAT")
, pch=19, col=c("black","red","blue")
, bty="n")
}
Theta.1988 <- Theta.Quants[,grep("1988", colnames (Theta.Quants))]
Theta.1995 <- Theta.Quants[,grep("1995", colnames (Theta.Quants))]
Theta.2013 <- Theta.Quants[,grep("2013", colnames (Theta.Quants))]
labelPais <- c("Argentina","Bolivia","Brazil","Chile"
,"Colombia","Costa Rica","Ecuador"
,"El Salvador","Guatemala","Honduras","Mexico"
,"Nicaragua","Panama","Paraguay","Peru"
,"Dominican Republic","Uruguay","Venezuela")
order.1988 <- order (Theta.1988[3,])
# 1988
par (las=1, mar=c(3.5,9,2,1), mfrow=c(1,1), cex.main=1)
lo.x <- min (Theta.1988) - 0.05
hi.x <- max (Theta.1988) + 0.05 # hi.x <- 0
plot (c(lo.x, hi.x)
, c(1, ncol(Theta.1988))
, type="n", xlab="", xlim=c(-4,4)
, ylab="", axes=F)
axis(1, cex=0.9)
mtext (1, line=2, text="Pro-market public policy score")
mtext (text=labelPais[order.1988], side=2, at=c(1:ncol(Theta.1988)), cex=0.9)
points (xy.coords(Theta.1988[3,order.1988], 1:ncol(Theta.1988)), pch=19)
segments (x0=Theta.1988[2,order.1988]
, x1=Theta.1988[4,order.1988]
, y0=seq(1, ncol(Theta.1988), by=1)
, y1=seq(1, ncol(Theta.1988), by=1), lwd=6)
segments (x0=Theta.1988[1,order.1988]
, x1=Theta.1988[5,order.1988]
, y0=seq(1, ncol(Theta.1988), by=1)
, y1=seq(1, ncol(Theta.1988), by=1), lwd=2)
abline (v=0, lty=3)
par (las=1, mar=c(3.5,9,2,1), mfrow=c(1,1), cex.main=1)
lo.x <- min (Theta.1995) - 0.05
hi.x <- max (Theta.1995) + 0.05 # hi.x <- 0
plot (c(lo.x, hi.x)
, c(1, ncol(Theta.1995))
, type="n", xlab="", xlim=c(-4,4)
, ylab="", axes=F)
axis(1, cex=0.9)
mtext (1, line=2, text="Pro-market public policy score")
mtext (text=labelPais[order.1988], side=2, at=c(1:ncol(Theta.1988)), cex=0.9)
points (xy.coords(Theta.1995[3,order.1988], 1:ncol(Theta.1988)), pch=19)
segments (x0=Theta.1995[2,order.1988]
, x1=Theta.1995[4,order.1988]
, y0=seq(1, ncol(Theta.1995), by=1)
, y1=seq(1, ncol(Theta.1995), by=1), lwd=6)
segments (x0=Theta.1995[1,order.1988]
, x1=Theta.1995[5,order.1988]
, y0=seq(1, ncol(Theta.1995), by=1)
, y1=seq(1, ncol(Theta.1995), by=1), lwd=2)
abline (v=0, lty=3)
par (las=1, mar=c(3.5,9,2,1), mfrow=c(1,1), cex.main=1)
lo.x <- min (Theta.2013) - 0.05
hi.x <- max (Theta.2013) + 0.05 # hi.x <- 0
plot (c(lo.x, hi.x)
, c(1, ncol(Theta.2013))
, type="n", xlab="", xlim=c(-4,4)
, ylab="", axes=F)
axis(1, cex=0.9)
mtext (1, line=2, text="Pro-market public policy score")
mtext (text=labelPais[order.1988], side=2, at=c(1:ncol(Theta.1988)), cex=0.9)
points (xy.coords(Theta.2013[3,order.1988], 1:ncol(Theta.1988)), pch=19)
segments (x0=Theta.2013[2,order.1988]
, x1=Theta.2013[4,order.1988]
, y0=seq(1, ncol(Theta.2013), by=1)
, y1=seq(1, ncol(Theta.2013), by=1), lwd=6)
segments (x0=Theta.2013[1,order.1988]
, x1=Theta.2013[5,order.1988]
, y0=seq(1, ncol(Theta.2013), by=1)
, y1=seq(1, ncol(Theta.2013), by=1), lwd=2)
abline (v=0, lty=3)
PoolChains3 <- mcmc.list (as.mcmc (jags.model[[1]][[1]]), as.mcmc (jags.model[[1]][[2]])); rm (jags.model)
print (gelman.diag  (PoolChains3, multivariate=FALSE))
rm (PoolChains3)
load (file="~/Dropbox/ChainBook/Datasets/OriginalDataFiles/BayesGRMPublicPolicyUnconstrainedNoVAT.RData")
Theta <- rbind (PoolChains3[[1]][,grep("theta",  colnames (PoolChains3[[1]]))],
PoolChains3[[2]][,grep("theta",  colnames (PoolChains3[[2]]))])
Kappa <- rbind (PoolChains3[[1]][,grep("kappa",  colnames (PoolChains3[[1]]))],
PoolChains3[[2]][,grep("kappa",  colnames (PoolChains3[[2]]))])
Alpha <- rbind (PoolChains3[[1]][,grep("alpha",  colnames (PoolChains3[[1]]))],
PoolChains3[[2]][,grep("alpha",  colnames (PoolChains3[[2]]))])
Deviance <- c (PoolChains3[[1]][,grep("deviance",  colnames (PoolChains3[[1]]))],
PoolChains3[[2]][,grep("deviance",  colnames (PoolChains3[[2]]))])
# Plot discrimination coefficients
Alpha.Quants <- matrix (NA, nrow=5, ncol=ncol (Alpha))
for (r in 1:ncol(Alpha)){
Alpha.Quants[,r] <- quantile (Alpha[,r], prob=c(0.025,0.1,0.5,0.9,0.975))
}
colnames (Alpha.Quants) <- colnames (Alpha)
par (las=1, mar=c(3.5,9,2,1), mfrow=c(1,1), cex.main=1)
lo.x <- min (Alpha.Quants) - 0.05
hi.x <- max (Alpha.Quants) + 0.05 # hi.x <- 0
plot (c(lo.x, hi.x)
, c(1, ncol(Alpha.Quants))
, type="n", xlab=""
, ylab="", axes=F)
axis(1, cex=0.9)
mtext (1, line=2, text="Coefficient (80% and 95% HPDs)")
# mtext (3, line=0, text="Fixed coefficients")
mtext (text=etiquetas2, side=2, at=c(1:ncol(Alpha.Quants)), cex=0.9)
points (xy.coords(Alpha.Quants[3,], 1:ncol(Alpha.Quants)), pch=19)
segments (x0=Alpha.Quants[2,]
, x1=Alpha.Quants[4,]
, y0=seq(1, ncol(Alpha.Quants), by=1)
, y1=seq(1, ncol(Alpha.Quants), by=1), lwd=6)
segments (x0=Alpha.Quants[1,]
, x1=Alpha.Quants[5,]
, y0=seq(1, ncol(Alpha.Quants), by=1)
, y1=seq(1, ncol(Alpha.Quants), by=1), lwd=2)
abline (h=1:ncol(Alpha.Quants), lty=3)
abline (v=0, lty=3)
OrderData <- data.frame (FinTrans, ResRequire, JobTermCost, WorkFlex
, capitalopenness
, CorporateTax, PersonalTax
, avgTariff, tradeDisp, IntRate, MinWage
, Privatize2, Privatize)
apply (OrderData, 2, max, na.rm=T)
OrderData$country <- AllData$country
OrderData$year    <- AllData$year
summary (OrderData)
etiquetas2 <- etiquetas2[-c(5,6,9)]
Y <- as.matrix (OrderData) # Matrix with ordered responses to policy items
N <- nrow(OrderData)   # Number of country-year observations
J <- ncol(OrderData)   # Number of items
K <- as.numeric (apply (Y, 2, max, na.rm=T)) # Number of categories in each item j
# Build Kappa matrix to hold values
# Items may have different number of categories, so we need to fix at 0 all cutpoints that won't be needed
# For example, if the maximum number of categories is 5 (needing 4 cutpoints), but an item only has 3 categories
# (needing 2 cutpoints), the row for the 3-category item should be NA, NA, 0, 0 (the NAs will store the MCMC
# iterations)
kappa.matrix <- matrix (NA, nrow=J, ncol=(max(K)-1))
for (i in 1:length(K)){
if (K[i] > ncol(kappa.matrix)) { next } else {
kappa.matrix[i,K[i]:ncol(kappa.matrix)] <- 0
}
# Priors
s.alpha <- 4
s.kappa <- 4
m.alpha <- 0
m.kappa <- 0
# Set parameter monitors
jags.parameters <- c("theta","deviance","alpha","kappa")
# Dump data into correct format
Data=list(Y=Y, J=J, N=N, K=K
, s.alpha=s.alpha, s.kappa=s.kappa
, m.alpha=m.alpha, m.kappa=m.kappa
, kappa=kappa.matrix)
jags.data <- dump.format(Data) #
# Function to build appropriate number of priors for varying cutpoints
build.kappa.inits <- function (input.mat=kappa.matrix, n.cat=K) {
# input.mat contains the matrix that we will pass as data, following advice in Curtis 2010, p.9
# n.cat is a vector with the number of categories for each item
mat.inits <- matrix (NA, ncol=ncol(input.mat), nrow=nrow(input.mat))
for (i in 1:nrow(mat.inits)) {
mat.inits[i,1:(K[i]-1)] <- rnorm (K[i]-1,0,1)
}
return (mat.inits)
}
# Function to generate initial values
jags.inits <- function()
{
dump.format(
list(
theta=rnorm(N,0,2)
, alpha=runif(J,0,2)  # To coincide with positive priors
, kappa.star=build.kappa.inits ()
#, beta=rnorm(1,0,2)
) )
}
load (file="~/Dropbox/ChainBook/Datasets/OriginalDataFiles/BayesGRMPublicPolicyUnconstrainedNoVAT.RData")
Theta <- rbind (PoolChains3[[1]][,grep("theta",  colnames (PoolChains3[[1]]))],
PoolChains3[[2]][,grep("theta",  colnames (PoolChains3[[2]]))])
Kappa <- rbind (PoolChains3[[1]][,grep("kappa",  colnames (PoolChains3[[1]]))],
PoolChains3[[2]][,grep("kappa",  colnames (PoolChains3[[2]]))])
Alpha <- rbind (PoolChains3[[1]][,grep("alpha",  colnames (PoolChains3[[1]]))],
PoolChains3[[2]][,grep("alpha",  colnames (PoolChains3[[2]]))])
Deviance <- c (PoolChains3[[1]][,grep("deviance",  colnames (PoolChains3[[1]]))],
PoolChains3[[2]][,grep("deviance",  colnames (PoolChains3[[2]]))])
# Plot discrimination coefficients
Alpha.Quants <- matrix (NA, nrow=5, ncol=ncol (Alpha))
for (r in 1:ncol(Alpha)){
Alpha.Quants[,r] <- quantile (Alpha[,r], prob=c(0.025,0.1,0.5,0.9,0.975))
}
colnames (Alpha.Quants) <- colnames (Alpha)
par (las=1, mar=c(3.5,9,2,1), mfrow=c(1,1), cex.main=1)
lo.x <- min (Alpha.Quants) - 0.05
hi.x <- max (Alpha.Quants) + 0.05 # hi.x <- 0
plot (c(lo.x, hi.x)
, c(1, ncol(Alpha.Quants))
, type="n", xlab=""
, ylab="", axes=F)
axis(1, cex=0.9)
mtext (1, line=2, text="Coefficient (80% and 95% HPDs)")
# mtext (3, line=0, text="Fixed coefficients")
mtext (text=etiquetas2, side=2, at=c(1:ncol(Alpha.Quants)), cex=0.9)
points (xy.coords(Alpha.Quants[3,], 1:ncol(Alpha.Quants)), pch=19)
segments (x0=Alpha.Quants[2,]
, x1=Alpha.Quants[4,]
, y0=seq(1, ncol(Alpha.Quants), by=1)
, y1=seq(1, ncol(Alpha.Quants), by=1), lwd=6)
segments (x0=Alpha.Quants[1,]
, x1=Alpha.Quants[5,]
, y0=seq(1, ncol(Alpha.Quants), by=1)
, y1=seq(1, ncol(Alpha.Quants), by=1), lwd=2)
abline (h=1:ncol(Alpha.Quants), lty=3)
abline (v=0, lty=3)
graphicsPath
pdf ( paste(graphicsPath, "BayesGRMunconstrainedDiscriminationParametersNoVAT.pdf", sep=""), h=5, w=7)
par (las=1, mar=c(3.5,9,2,1), mfrow=c(1,1), cex.main=1)
lo.x <- min (Alpha.Quants) - 0.05
hi.x <- max (Alpha.Quants) + 0.05 # hi.x <- 0
plot (c(lo.x, hi.x)
, c(1, ncol(Alpha.Quants))
, type="n", xlab=""
, ylab="", axes=F)
axis(1, cex=0.9)
mtext (1, line=2, text="Coefficient (80% and 95% HPDs)")
# mtext (3, line=0, text="Fixed coefficients")
mtext (text=etiquetas2, side=2, at=c(1:ncol(Alpha.Quants)), cex=0.9)
points (xy.coords(Alpha.Quants[3,], 1:ncol(Alpha.Quants)), pch=19)
segments (x0=Alpha.Quants[2,]
, x1=Alpha.Quants[4,]
, y0=seq(1, ncol(Alpha.Quants), by=1)
, y1=seq(1, ncol(Alpha.Quants), by=1), lwd=6)
segments (x0=Alpha.Quants[1,]
, x1=Alpha.Quants[5,]
, y0=seq(1, ncol(Alpha.Quants), by=1)
, y1=seq(1, ncol(Alpha.Quants), by=1), lwd=2)
abline (h=1:ncol(Alpha.Quants), lty=3)
abline (v=0, lty=3)
dev.off ()
graphicsPath <- "~/Dropbox/ChainBook/BookManuscript/Graphs/"
load (file="~/Dropbox/ChainBook/OddsAndEnds/FullModel/posteriorDistributionGRMdoubleAnchor.RData")
PoolChains3 <- mcmc.list (as.mcmc (jags.model[[1]][[1]]), as.mcmc (jags.model[[1]][[2]])) #; rm (jags.model)
gelman.r2 <- gelman.diag  (PoolChains3, multivariate=FALSE)
etiquetas2 <- c( "Financial Transaction Tax"
, "Reserve Requirement"
, "Job Termination", "Work Hours Flexibility"
, "Capital Openness", "Corporate Tax", "Personal Tax"
, "Average Tariff", "Tariff Dispersion"
, "Interest Rate Lib.", "Minimum Wage"
, "Privatization 2", "Privatization 1")
Theta <- rbind (PoolChains3[[1]][,grep("theta",  colnames (PoolChains3[[1]]))],
PoolChains3[[2]][,grep("theta",  colnames (PoolChains3[[2]]))])
Kappa <- rbind (PoolChains3[[1]][,grep("kappa",  colnames (PoolChains3[[1]]))],
PoolChains3[[2]][,grep("kappa",  colnames (PoolChains3[[2]]))])
Eta <- rbind (PoolChains3[[1]][,grep("^eta",  colnames (PoolChains3[[1]]))],
PoolChains3[[2]][,grep("^eta",  colnames (PoolChains3[[2]]))])
Deviance <- c (PoolChains3[[1]][,grep("deviance",  colnames (PoolChains3[[1]]))],
PoolChains3[[2]][,grep("deviance",  colnames (PoolChains3[[2]]))])
# Quick facts about posterior distribution of theta
theta.mean <- colMeans (Theta)
mean (theta.mean)
sd (theta.mean)
length (theta.mean[theta.mean < cutpoints[1]]) # no. of theta scores below cutpoint[1]
length (theta.mean[theta.mean < cutpoints[2]]) # no. of theta scores below cutpoint[2]
# Quick facts about the posterior distribution of discrimination parameters
eta.mean <- colMeans (Eta)
mean (eta.mean)
sd (eta.mean)
# Which policies are we most likely to see?
# When theta=0.8 and eta = 0.5
P1 <- pnorm (0.5*(-0.89-0.8))
P2 <- pnorm (0.5*(0.66-0.8))
p1 <- P1
p2 <- P2-P1
p3 <- 1-P2
print (round (c(p1, p2, p3), 2))
# When theta=0.8 and eta = 1.5
P1 <- pnorm (1.5*(-0.89-0.8))
P2 <- pnorm (1.5*(0.66-0.8))
p1 <- P1
p2 <- P2-P1
p3 <- 1-P2
print (round (c(p1, p2, p3), 2))
Eta.Quants <- matrix (NA, nrow=5, ncol=ncol (Eta))
for (r in 1:ncol(Eta)){
Eta.Quants[,r] <- quantile (Eta[,r], prob=c(0.025,0.1,0.5,0.9,0.975))
}
colnames (Eta.Quants) <- colnames (Eta)
graphicsPath <- "~/Dropbox/ChainBook/BookManuscript/Graphs/"
par (las=1, mar=c(3.5,9,2,1), mfrow=c(1,1), cex.main=1)
lo.x <- min (Eta.Quants) - 0.05
hi.x <- max (Eta.Quants) + 0.05 # hi.x <- 0
plot (c(lo.x, hi.x)
, c(1, ncol(Eta.Quants))
, type="n", xlab=""
, ylab="", axes=F)
axis(1, cex=0.9)
mtext (1, line=2, text="Coefficient (80% and 95% HPDs)")
# mtext (3, line=0, text="Fixed coefficients")
mtext (text=etiquetas2, side=2, at=c(1:ncol(Eta.Quants)), cex=0.9)
points (xy.coords(Eta.Quants[3,], 1:ncol(Eta.Quants)), pch=19)
segments (x0=Eta.Quants[2,]
, x1=Eta.Quants[4,]
, y0=seq(1, ncol(Eta.Quants), by=1)
, y1=seq(1, ncol(Eta.Quants), by=1), lwd=6)
segments (x0=Eta.Quants[1,]
, x1=Eta.Quants[5,]
, y0=seq(1, ncol(Eta.Quants), by=1)
, y1=seq(1, ncol(Eta.Quants), by=1), lwd=2)
abline (h=1:ncol(Eta.Quants), lty=3)
abline (v=0, lty=3)
graphicsPath <- "~/Dropbox/ChainBook/BookManuscript/Graphs/"
pdf ( paste(graphicsPath, "BayesGRMdoubleAnchorDiscriminationParametersNoVAT.pdf", sep=""), h=5, w=7)
par (las=1, mar=c(3.5,9,2,1), mfrow=c(1,1), cex.main=1)
lo.x <- min (Eta.Quants) - 0.05
hi.x <- max (Eta.Quants) + 0.05 # hi.x <- 0
plot (c(lo.x, hi.x)
, c(1, ncol(Eta.Quants))
, type="n", xlab=""
, ylab="", axes=F)
axis(1, cex=0.9)
mtext (1, line=2, text="Coefficient (80% and 95% HPDs)")
# mtext (3, line=0, text="Fixed coefficients")
mtext (text=etiquetas2, side=2, at=c(1:ncol(Eta.Quants)), cex=0.9)
points (xy.coords(Eta.Quants[3,], 1:ncol(Eta.Quants)), pch=19)
segments (x0=Eta.Quants[2,]
, x1=Eta.Quants[4,]
, y0=seq(1, ncol(Eta.Quants), by=1)
, y1=seq(1, ncol(Eta.Quants), by=1), lwd=6)
segments (x0=Eta.Quants[1,]
, x1=Eta.Quants[5,]
, y0=seq(1, ncol(Eta.Quants), by=1)
, y1=seq(1, ncol(Eta.Quants), by=1), lwd=2)
abline (h=1:ncol(Eta.Quants), lty=3)
abline (v=0, lty=3)
dev.off ()
OrderData <- data.frame (FinTrans, ResRequire, JobTermCost, WorkFlex
, capitalopenness
, CorporateTax, PersonalTax
, avgTariff, tradeDisp, IntRate, MinWage
, Privatize2, Privatize)
ncol (OrderData)
